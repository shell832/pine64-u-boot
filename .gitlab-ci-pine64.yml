image: ubports/build-essential:bionic

build:
  stage: build
  variables:
    ARCH: arm64
    CROSS_COMPILE: aarch64-linux-gnu-
  before_script:
    - apt update
    - apt install unzip flex bc bison kmod cpio libssl-dev device-tree-compiler python3 python3-dev python3-distutils python3-pip python3-setuptools swig -y
  script:
    - git clone https://github.com/ARM-software/arm-trusted-firmware.git
    - cd arm-trusted-firmware
    - make PLAT=sun50i_a64 DEBUG=1 bl31
    - cp build/sun50i_a64/debug/bl31.bin ../bl31.bin
    - cd ..
    - make distclean
    - make pine64_plus_defconfig
    - echo 'CONFIG_IDENT_STRING=" Pine64"' >> .config
    - make -j$(nproc)
    - cat spl/sunxi-spl.bin u-boot.itb > u-boot-sunxi-with-spl-pine64.bin
    - make sopine_baseboard_defconfig
    - echo 'CONFIG_IDENT_STRING=" Pine64"' >> .config
    - make -j$(nproc)
    - cat spl/sunxi-spl.bin u-boot.itb > u-boot-sunxi-with-spl-sopine.bin
    - make pinebook_defconfig
    - echo 'CONFIG_IDENT_STRING=" Pine64"' >> .config
    - make -j$(nproc)
    - cat spl/sunxi-spl.bin u-boot.itb > u-boot-sunxi-with-spl-pinebook.bin
    - make pinephone_defconfig
    - echo 'CONFIG_IDENT_STRING=" Pine64"' >> .config
    - make -j$(nproc)
    - cat spl/sunxi-spl.bin u-boot.itb > u-boot-sunxi-with-spl-pinephone.bin
  artifacts:
    paths:
      - u-boot-sunxi-with-spl-pine64.bin
      - u-boot-sunxi-with-spl-sopine.bin
      - u-boot-sunxi-with-spl-pinebook.bin
      - u-boot-sunxi-with-spl-pinephone.bin
  cache:
    paths:
      - "*.o"
